name: Build Android APK

on:
  push:
    tags:
      - "v*"   # Crée une release quand tu push un tag comme v1.0.0, v1.1.0, etc.
  workflow_dispatch:

permissions:
  contents: write  # nécessaire pour créer et modifier des releases

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      JAVA_HOME: /usr/lib/jvm/java-17-temurin

    steps:
      # 1️⃣ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ Setup Java 17
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # 4️⃣ Install JS dependencies
      - name: Install dependencies
        run: npm install

      # 5️⃣ Prebuild Expo
      - name: Prebuild Expo
        run: npm run prebuild

      # 6️⃣ Install Android SDK
      - name: Setup Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          mkdir -p $HOME/Android/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/Android/cmdline-tools
          yes | $HOME/Android/cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$HOME/Android "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # 7️⃣ Build APKs (Release, multi-ABI)
      - name: Build Release APKs
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew clean assembleRelease

      # 8️⃣ Create GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false

      # 9️⃣ Upload all APKs from release folder
      - name: Upload APKs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const path = require("path");
            const uploadUrl = "${{ steps.create_release.outputs.upload_url }}";
            const dir = "android/app/build/outputs/apk/release";
            const files = fs.readdirSync(dir).filter(f => f.endsWith(".apk"));

            for (const file of files) {
              const filePath = path.join(dir, file);
              console.log(`Uploading ${filePath}...`);
              await github.rest.repos.uploadReleaseAsset({
                url: uploadUrl,
                headers: { "content-type": "application/vnd.android.package-archive" },
                name: file,
                data: fs.readFileSync(filePath)
              });
            }
